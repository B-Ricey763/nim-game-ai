name: release

on:
  push:
    tags:
    - 'v*'
jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
      rg_version: ${{ env.RG_VERSION }}
    steps:
      - name: Get the release version from the tag
        shell: bash
        if: env.RG_VERSION == ''
        run: |
          echo "RG_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "version is: ${{ env.RG_VERSION }}"
      - name: Create GitHub release
        id: release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RG_VERSION }}
          name: ${{ env.RG_VERSION }}

  build-release:
    name: build-release
    needs: ['create-release']
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            asset_name: nim-linux
          - os: windows-latest
            asset_name: nim.exe
          - os: macos-latest
            asset_name: nim-macos
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with: 
        toolchain: stable
        override: true
    - name: Build release binary
      run: cargo build --verbose --release 
    - name: Strip release binary (linux and macos)
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      run: strip "target/release/nim"
    - name: Find Executable
      shell: bash
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          echo "ASSET=target/release/nim.exe" >> $GITHUB_ENV
        else
          echo "ASSET=target/release/nim" >> $GITHUB_ENV
        fi 
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        file: ${{ env.ASSET }}
        asset_name: ${{ matrix.asset_name }}
